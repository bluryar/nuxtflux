{
  "$schema": "https://raw.githubusercontent.com/microsoft/vscode-css-languageservice/main/docs/customData.schema.json",
  "version": 1.1,
  "atDirectives": [
    {
      "name": "@tailwind",
      "description": "使用 `@tailwind` 指令将 Tailwind 的 `base`、`components`、`utilities` 和 `screens` 样式插入到您的 CSS 中。",
      "references": [
        {
          "name": "Tailwind 文档",
          "url": "https://tailwindcss.com/docs/functions-and-directives#tailwind"
        }
      ]
    },
    {
      "name": "@apply",
      "description": "使用 `@apply` 指令将任何现有的实用类内联到您自己的自定义 CSS 中。当您在 HTML 中发现一个您想要提取到新组件的通用实用模式时，这非常有用。",
      "references": [
        {
          "name": "Tailwind 文档",
          "url": "https://tailwindcss.com/docs/functions-and-directives#apply"
        }
      ]
    },
    {
      "name": "@responsive",
      "description": "您可以通过在 `@responsive` 指令中包裹您自己的类的定义，生成响应式变体：\n```css\n@responsive {\n  .alert {\n    background-color: #E53E3E;\n  }\n}\n```\n",
      "references": [
        {
          "name": "Tailwind 文档",
          "url": "https://tailwindcss.com/docs/functions-and-directives#responsive"
        }
      ]
    },
    {
      "name": "@screen",
      "description": "`@screen` 指令允许您创建媒体查询，通过 **名称** 而不是在您自己的 CSS 中复制它们的值来引用您的断点：\n```css\n@screen sm {\n  /* ... */\n}\n```\n…变成了这样：\n```css\n@media (min-width: 640px) {\n  /* ... */\n}\n```\n",
      "references": [
        {
          "name": "Tailwind 文档",
          "url": "https://tailwindcss.com/docs/functions-and-directives#screen"
        }
      ]
    },
    {
      "name": "@variants",
      "description": "通过在 `@variants` 指令中包裹您自己的实用工具的定义，生成 `hover`、`focus`、`active` 和其他 **变体**：\n```css\n@variants hover, focus {\n   .btn-brand {\n    background-color: #3182CE;\n  }\n}\n```\n",
      "references": [
        {
          "name": "Tailwind 文档",
          "url": "https://tailwindcss.com/docs/functions-and-directives#variants"
        }
      ]
    }
  ]
}
